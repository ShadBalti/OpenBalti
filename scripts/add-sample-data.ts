import dbConnect from "../lib/mongodb"
import Word from "../models/Word"

// Sample Balti-English word pairs
const sampleWords = [
  { balti: "‡ΩÜ‡Ω¥", english: "water" },
  { balti: "‡Ωò‡Ω∫", english: "fire" },
  { balti: "‡Ω¶", english: "earth" },
  { balti: "‡Ω¢‡æ≥‡Ω¥‡ΩÑ", english: "air" },
  { balti: "‡Ωâ‡Ω≤‡ºã‡Ωò", english: "sun" },
  { balti: "‡Ωü‡æ≥‡ºã‡Ωñ", english: "moon" },
  { balti: "‡Ω¶‡æê‡Ω¢‡ºã‡Ωò", english: "star" },
  { balti: "‡Ωì‡Ωò‡ºã‡Ωò‡ΩÅ‡Ω†", english: "sky" },
  { balti: "‡Ω¢‡Ω≤", english: "mountain" },
  { balti: "‡Ωò‡Ωö‡Ωº", english: "lake" },
  { balti: "‡Ω§‡Ω≤‡ΩÑ", english: "tree" },
  { balti: "‡Ωò‡Ω∫‡ºã‡Ωè‡Ωº‡ΩÇ", english: "flower" },
  { balti: "‡Ω†‡Ωñ‡æ≤‡Ω¶", english: "fruit" },
  { balti: "‡Ωü‡Ω¶", english: "food" },
  { balti: "‡ΩÜ‡ΩÑ", english: "drink" },
  { balti: "‡ΩÅ‡æ±‡Ω≤", english: "dog" },
  { balti: "‡Ωñ‡æ±‡Ω≤‡ºã‡Ω£", english: "cat" },
  { balti: "‡Ω¢‡æü", english: "horse" },
  { balti: "‡Ωñ", english: "cow" },
  { balti: "‡Ω£‡Ω¥‡ΩÇ", english: "sheep" },
  { balti: "‡Ωñ‡æ±", english: "bird" },
  { balti: "‡Ωâ", english: "fish" },
  { balti: "‡Ωò‡Ω≤", english: "person" },
  { balti: "‡Ωñ‡Ω¥", english: "boy" },
  { balti: "‡Ωñ‡Ω¥‡ºã‡Ωò‡Ωº", english: "girl" },
  { balti: "‡Ωï", english: "father" },
  { balti: "‡Ωò", english: "mother" },
  { balti: "‡Ω¶‡æ§‡Ω¥‡Ωì", english: "sibling" },
  { balti: "‡ΩÇ‡æ≤‡Ωº‡ΩÇ‡Ω¶‡ºã‡Ωî‡Ωº", english: "friend" },
  { balti: "‡Ωë‡ΩÇ‡æ≤", english: "enemy" },
  { balti: "‡ΩÅ‡ΩÑ‡ºã‡Ωî", english: "house" },
  { balti: "‡Ω¶‡æí‡Ωº", english: "door" },
  { balti: "‡Ω¶‡æí‡Ω∫‡Ω†‡Ω¥‡ºã‡ΩÅ‡Ω¥‡ΩÑ", english: "window" },
  { balti: "‡Ω£‡Ωò", english: "road" },
  { balti: "‡ΩÇ‡æ≤‡Ωº‡ΩÑ‡ºã‡ΩÅ‡æ±‡Ω∫‡Ω¢", english: "city" },
  { balti: "‡ΩÇ‡æ≤‡Ωº‡ΩÑ‡ºã‡ΩÇ‡Ω¶‡Ω∫‡Ωñ", english: "village" },
  { balti: "‡Ω¢‡æí‡æ±‡Ω£‡ºã‡ΩÅ‡Ωñ", english: "country" },
  { balti: "‡Ω†‡Ωõ‡Ωò‡ºã‡ΩÇ‡æ≥‡Ω≤‡ΩÑ", english: "world" },
  { balti: "‡Ωì‡Ωò‡ºã‡Ω£‡ΩÑ‡Ω¶", english: "morning" },
  { balti: "‡Ωâ‡Ω≤‡Ωì‡ºã‡ΩÇ‡Ω¥‡ΩÑ", english: "noon" },
  { balti: "‡Ωë‡ΩÇ‡Ωº‡ΩÑ‡ºã‡Ωò‡Ωº", english: "evening" },
  { balti: "‡Ωò‡Ωö‡Ωì‡ºã‡Ωò‡Ωº", english: "night" },
  { balti: "‡Ωë‡Ωñ‡æ±‡Ω¢‡ºã‡ΩÅ", english: "summer" },
  { balti: "‡Ω¶‡æü‡Ωº‡Ωì‡ºã‡ΩÅ", english: "autumn" },
  { balti: "‡Ωë‡ΩÇ‡Ω¥‡Ωì‡ºã‡ΩÅ", english: "winter" },
  { balti: "‡Ωë‡Ωî‡æ±‡Ω≤‡Ωë‡ºã‡ΩÅ", english: "spring" },
  { balti: "‡Ω£‡Ωº", english: "year" },
  { balti: "‡Ωü‡æ≥‡ºã‡Ωñ", english: "month" },
  { balti: "‡Ωñ‡Ωë‡Ω¥‡Ωì‡ºã‡Ωï‡æ≤‡ΩÇ", english: "week" },
  { balti: "‡Ωâ‡Ω≤‡Ωì‡ºã‡Ωò", english: "day" },
]

async function addSampleData() {
  try {
    console.log("üîÑ Connecting to MongoDB...")
    await dbConnect()
    console.log("‚úÖ MongoDB connected successfully!")

    // Check if there's already data in the collection
    const existingCount = await Word.countDocuments()
    console.log(`üìä Found ${existingCount} existing words in the database.`)

    if (existingCount > 0) {
      const shouldContinue = process.argv.includes("--force")
      if (!shouldContinue) {
        console.log("‚ö†Ô∏è Database already contains words. Use --force flag to add sample data anyway.")
        process.exit(0)
      }
      console.log("üîÑ Force flag detected. Adding sample data anyway...")
    }

    // Insert the sample words
    console.log(`üîÑ Adding ${sampleWords.length} sample Balti-English word pairs...`)
    const result = await Word.insertMany(sampleWords)
    console.log(`‚úÖ Successfully added ${result.length} sample words to the database!`)

    // Display some of the added words
    console.log("\nüìã Sample of added words:")
    result.slice(0, 5).forEach((word) => {
      console.log(`- ${word.balti} : ${word.english}`)
    })
    console.log("...")
  } catch (error) {
    console.error("‚ùå Error adding sample data:", error)
  } finally {
    // Close the connection
    console.log("üîÑ Closing MongoDB connection...")
    process.exit(0)
  }
}

// Run the function
addSampleData()
